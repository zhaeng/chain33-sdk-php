<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: statistic.proto

namespace Chain33\Phpsdk\Lib\Protobuf\Types;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\GPBWrapperUtils;

/**
 * Generated from protobuf message <code>chain33.phpsdk.lib.protobuf.types.ExecBalanceItem</code>
 */
class ExecBalanceItem extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes execAddr = 1;</code>
     */
    private $execAddr = '';
    /**
     * Generated from protobuf field <code>int64 frozen = 2;</code>
     */
    private $frozen = 0;
    /**
     * Generated from protobuf field <code>int64 active = 3;</code>
     */
    private $active = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $execAddr
     *     @type int|string $frozen
     *     @type int|string $active
     * }
     */
    public function __construct($data = NULL) {
        \chain33\phpsdk\lib\protobuf\Statistic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes execAddr = 1;</code>
     * @return string
     */
    public function getExecAddr()
    {
        return $this->execAddr;
    }

    /**
     * Generated from protobuf field <code>bytes execAddr = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setExecAddr($var)
    {
        GPBUtil::checkString($var, False);
        $this->execAddr = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 frozen = 2;</code>
     * @return int|string
     */
    public function getFrozen()
    {
        return $this->frozen;
    }

    /**
     * Generated from protobuf field <code>int64 frozen = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setFrozen($var)
    {
        GPBUtil::checkInt64($var);
        $this->frozen = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 active = 3;</code>
     * @return int|string
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Generated from protobuf field <code>int64 active = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setActive($var)
    {
        GPBUtil::checkInt64($var);
        $this->active = $var;

        return $this;
    }

}

